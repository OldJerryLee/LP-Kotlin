/*
 * generated by Xtext 2.12.0
 */
package org.xtext.example.kotlin.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith
import org.xtext.example.kotlin.kotlin.Model

@RunWith(XtextRunner)
@InjectWith(KotlinInjectorProvider)
class KotlinParsingTest {
	@Inject
	ParseHelper<Model> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			when (obj) { 1 -> println("One Two Three For Five")}
		''')
		Assert.assertNotNull(result)
		Assert.assertTrue(result.eResource.errors.isEmpty)
	}
	@Test
	def void loadModel2() {
		val result = parseHelper.parse('''
			when (obj) { "Hello" -> println("Greeting") }
		''')
		Assert.assertNotNull(result)
		Assert.assertTrue(result.eResource.errors.isEmpty)
	}
	
	@Test
	def void loadModel3() {
		val result = parseHelper.parse('''
			when (obj) { is Long -> println("Long") }
		''')
		Assert.assertNotNull(result)
		Assert.assertTrue(result.eResource.errors.isEmpty)
	}
	
	@Test
	def void loadModel4() {
		val result = parseHelper.parse('''
			when (obj) { !is String -> println("Not a String") }
		''')
		Assert.assertNotNull(result)
		Assert.assertTrue(result.eResource.errors.isEmpty)
	}
	
	@Test
	def void loadModel5() {
		val result = parseHelper.parse('''
			when (obj) { else -> println("Unknown") }
		''')
		Assert.assertNotNull(result)
		Assert.assertTrue(result.eResource.errors.isEmpty)
	}
}
